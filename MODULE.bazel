bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_go", version = "0.53.0")
bazel_dep(name = "gazelle", version = "0.44.0")
bazel_dep(name = "aspect_rules_js", version = "2.1.3")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.24.3")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.config(check_direct_dependencies = "error")
go_deps.from_file(go_mod = "//:go.mod")
go_deps.gazelle_override(
    # Force a Gazelle run to ensure build targets in Bazelisk follow
    # Gazelle naming conventions.
    build_file_generation = "on",
    path = "github.com/bazelbuild/bazelisk",
)
go_deps.gazelle_override(
    build_file_generation = "on",
    directives = [
        "gazelle:resolve go github.com/cqroot/multichoose @com_github_cqroot_multichoose//:go_default_library",
    ],
    path = "github.com/cqroot/prompt",
)
use_repo(
    go_deps,
    "com_github_anthropics_anthropic_sdk_go",
    "com_github_bazelbuild_bazelisk",
    "com_github_charmbracelet_bubbles",
    "com_github_charmbracelet_bubbletea",
    "com_github_charmbracelet_lipgloss",
    "com_github_cqroot_prompt",
    "com_github_creack_pty",
    "com_github_mattn_go_isatty",
    "org_golang_x_term",
)

inject_repo(
    go_deps,
    # Bazelisk depends on aspect_rules_js
    "aspect_rules_js",
)
